# This is a basic workflow to help you get started with Actions

name: Test CI
# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      verboseEnabled:
        description: 'run v'
        required: false
        default: "no"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Sample-Tester:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  
  test-runer:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     tests_env: ["united", "city", "arsenal"]
    steps:
      - uses: actions/checkout@v2
      - name: Print ENV
        run: |
          chmod +x scrip.sh 
          ./scrip.sh         
        env:
          ENV: ${{ matrix.tests_env }}
      - name: copy file
        run: | 
          cp tf.txt ${GITHUB_WORKSPACE}/tfplan.txt
          echo "${GITHUB_WORKSPACE}"
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const run_url = process.env.GITHUB_SERVER_URL + '/' + process.env.GITHUB_REPOSITORY + '/actions/runs/' + process.env.GITHUB_RUN_ID
            const run_link = '<a href="' + run_url + '">Actions</a>.'
            const fs = require('fs')
            const plan_file = fs.readFileSync('tfplan.txt', 'utf8')
            const plan = plan_file.length > 50000 ? plan_file.toString().substring(0, 50000) + " ..." : plan_file
            const truncated_message = plan_file.length > 50000 ? "Output is too long and was truncated. You can read full Plan in " + "link oflink" + "<br /><br />" : ""
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            console.log(plan)
            </details>
            console.log(truncated_message)
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
